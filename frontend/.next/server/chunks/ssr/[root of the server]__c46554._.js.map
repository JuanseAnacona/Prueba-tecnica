{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/juanc/Documents/Prueba%20tecnica/frontend/public/src/services/socket.tsx"],"sourcesContent":["import io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:3000'); // URL del backend\r\n\r\nexport default socket;"],"names":[],"mappings":";;;AAAA;AAAA;;AAEA,MAAM,SAAS,CAAA,GAAA,wLAAA,CAAA,UAAE,AAAD,EAAE,0BAA0B,kBAAkB;uCAE/C"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/juanc/Documents/Prueba%20tecnica/frontend/app/questions/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport api from '../../public/src/services/socket';\r\n\r\nexport default function AddQuestion() {\r\n  const [category, setCategory] = useState('');\r\n  const [questionText, setQuestionText] = useState('');\r\n  const [options, setOptions] = useState(['', '', '', '']);\r\n  const [correctAnswer, setCorrectAnswer] = useState('');\r\n  const router = useRouter();\r\n\r\n  const handleOptionChange = (index: number, value: string) => {\r\n    const newOptions = [...options];\r\n    newOptions[index] = value;\r\n    setOptions(newOptions);\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // Validar que todos los campos estén completos\r\n    if (!category || !questionText || options.some(option => !option) || !correctAnswer) {\r\n      alert('Por favor, completa todos los campos.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Enviar la pregunta al backend\r\n      await api.post('/questions', {\r\n        category,\r\n        questionText,\r\n        options,\r\n        correctAnswer,\r\n      });\r\n\r\n      // Redirigir al dashboard o a la lista de preguntas\r\n      router.push('/dashboard');\r\n    } catch (error) {\r\n      alert('Error al agregar la pregunta');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.title}>Agregar Nueva Pregunta</h1>\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>Categoría:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n            style={styles.input}\r\n          />\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>Pregunta:</label>\r\n          <textarea\r\n            value={questionText}\r\n            onChange={(e) => setQuestionText(e.target.value)}\r\n            style={styles.textarea}\r\n          />\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>Opciones:</label>\r\n          {options.map((option, index) => (\r\n            <input\r\n              key={index}\r\n              type=\"text\"\r\n              value={option}\r\n              onChange={(e) => handleOptionChange(index, e.target.value)}\r\n              style={styles.input}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div style={styles.formGroup}>\r\n          <label style={styles.label}>Respuesta Correcta:</label>\r\n          <select\r\n            value={correctAnswer}\r\n            onChange={(e) => setCorrectAnswer(e.target.value)}\r\n            style={styles.select}\r\n          >\r\n            <option value=\"\">Selecciona la respuesta correcta</option>\r\n            {options.map((option, index) => (\r\n              <option key={index} value={option}>\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button type=\"submit\" style={styles.button}>\r\n          Agregar Pregunta\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Estilos básicos con tipos corregidos\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column' as 'column' | 'row', // Correcto: aseguramos que sea uno de los tipos permitidos\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: '20px',\r\n  },\r\n  title: {\r\n    fontSize: '2rem',\r\n    color: '#333',\r\n    marginBottom: '20px',\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column' as 'column' | 'row', // Correcto: aseguramos que sea uno de los tipos permitidos\r\n    gap: '15px',\r\n    width: '100%',\r\n    maxWidth: '500px',\r\n  },\r\n  formGroup: {\r\n    display: 'flex',\r\n    flexDirection: 'column' as 'column' | 'row', // Correcto: aseguramos que sea uno de los tipos permitidos\r\n    gap: '5px',\r\n  },\r\n  label: {\r\n    fontSize: '1rem',\r\n    color: '#333',\r\n  },\r\n  input: {\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ccc',\r\n    fontSize: '1rem',\r\n  },\r\n  textarea: {\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ccc',\r\n    fontSize: '1rem',\r\n    minHeight: '100px',\r\n  },\r\n  select: {\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ccc',\r\n    fontSize: '1rem',\r\n  },\r\n  button: {\r\n    padding: '10px 20px',\r\n    backgroundColor: '#0070f3',\r\n    color: '#fff',\r\n    borderRadius: '5px',\r\n    border: 'none',\r\n    fontSize: '1rem',\r\n    cursor: 'pointer',\r\n    marginTop: '20px',\r\n  },\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}