{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/juanc/Documents/Prueba%20tecnica/frontend/public/src/services/api.tsx"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3000',\r\n});\r\n\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('access_token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default api;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;AAGA,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC5B,MAAM,QAAQ,aAAa,OAAO,CAAC;IACnC,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;IAClD;IACA,OAAO;AACT;uCAEe"}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/juanc/Documents/Prueba%20tecnica/frontend/app/dashboard/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport api from \"../../public/src/services/api\";\r\n\r\n\r\ninterface Question {\r\n  questionText: string;\r\n  options: string[];\r\n  correctAnswer: string;\r\n}\r\n\r\nexport default function Dashboard() {\r\n  const [questions, setQuestions] = useState<Question[]>([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState<number>(0);\r\n  const [score, setScore] = useState<number>(0);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const router = useRouter(); \r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await api.get(\"/questions\");\r\n        setQuestions(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(\"Error al cargar las preguntas\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  const handleAnswer = (answer: string) => {\r\n\r\n    setScore((prevScore) => {\r\n      const newScore = answer === questions[currentQuestion].correctAnswer ? prevScore + 10 : prevScore;\r\n\r\n      // Pasar a la siguiente pregunta o terminar el juego\r\n      if (currentQuestion < questions.length - 1) {\r\n        setCurrentQuestion(currentQuestion + 1);\r\n      } else {\r\n        router.push(`/ranking`);\r\n      }\r\n\r\n      return newScore;\r\n    });\r\n  };\r\n\r\n  // Función para redirigir a la página de creación de preguntas\r\n  const goToQuestionsPage = () => {\r\n    router.push(\"/questions\");\r\n  };\r\n\r\n  if (loading) {\r\n    return <p className=\"loading\">Cargando preguntas...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"error\">{error}</p>;\r\n  }\r\n\r\n  if (questions.length === 0) {\r\n    return <p>No se encontraron preguntas para esta categoría.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>Juego de Preguntas</h1>\r\n      <div>\r\n        <h2>{questions[currentQuestion]?.questionText}</h2>\r\n        {questions[currentQuestion]?.options.map((option, index) => (\r\n          <button key={index} onClick={() => handleAnswer(option)}>\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <p>Puntaje: {score}</p>\r\n\r\n      {/* Botón para redirigir a la página de creación de preguntas */}\r\n      <button onClick={goToQuestionsPage} style={styles.button}>\r\n        Crear Nueva Pregunta\r\n      </button>\r\n\r\n      <style jsx>{`\r\n        /* General Styles */\r\n        .dashboard {\r\n          font-family: 'Roboto', sans-serif;\r\n          margin: 0;\r\n          padding: 2rem;\r\n          background-color: #fff;\r\n          border-radius: 8px;\r\n          box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n          width: 100%;\r\n          max-width: 600px;\r\n          text-align: center;\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n          align-items: center;\r\n        }\r\n\r\n        h1 {\r\n          color: #333;\r\n          font-size: 2rem;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        h2 {\r\n          color: #2c3e50;\r\n          font-size: 1.5rem;\r\n          margin-bottom: 20px;\r\n          line-height: 1.4;\r\n        }\r\n\r\n        button {\r\n          background-color: #3498db;\r\n          color: white;\r\n          border: none;\r\n          padding: 10px 20px;\r\n          margin: 8px;\r\n          border-radius: 5px;\r\n          cursor: pointer;\r\n          font-size: 1rem;\r\n          transition: background-color 0.3s ease;\r\n        }\r\n\r\n        button:hover {\r\n          background-color: #2980b9;\r\n        }\r\n\r\n        button:active {\r\n          transform: scale(0.98);\r\n        }\r\n\r\n        p {\r\n          font-size: 1.2rem;\r\n          color: #333;\r\n          margin-top: 20px;\r\n          font-weight: bold;\r\n        }\r\n\r\n        .loading, .error {\r\n          color: #e74c3c;\r\n          font-size: 1.2rem;\r\n          margin-top: 20px;\r\n          font-weight: bold;\r\n        }\r\n\r\n        @media (max-width: 768px) {\r\n          h1 {\r\n            font-size: 1.8rem;\r\n          }\r\n\r\n          h2 {\r\n            font-size: 1.2rem;\r\n          }\r\n\r\n          button {\r\n            padding: 8px 16px;\r\n            font-size: 0.9rem;\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Estilos del botón\r\nconst styles = {\r\n  button: {\r\n    padding: '10px 20px',\r\n    backgroundColor: '#0070f3',\r\n    color: '#fff',\r\n    borderRadius: '5px',\r\n    border: 'none',\r\n    fontSize: '1rem',\r\n    cursor: 'pointer',\r\n    marginTop: '20px',\r\n  },\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;;AAae,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IACzD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC/D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,iBAAiB;YACrB,IAAI;gBACF,MAAM,WAAW,MAAM,iIAAA,CAAA,UAAG,CAAC,GAAG,CAAC;gBAC/B,aAAa,SAAS,IAAI;gBAC1B,WAAW;YACb,EAAE,OAAO,OAAO;gBACd,SAAS;gBACT,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,eAAe,CAAC;QAEpB,SAAS,CAAC;YACR,MAAM,WAAW,WAAW,SAAS,CAAC,gBAAgB,CAAC,aAAa,GAAG,YAAY,KAAK;YAExF,oDAAoD;YACpD,IAAI,kBAAkB,UAAU,MAAM,GAAG,GAAG;gBAC1C,mBAAmB,kBAAkB;YACvC,OAAO;gBACL,OAAO,IAAI,CAAC,CAAC,QAAQ,CAAC;YACxB;YAEA,OAAO;QACT;IACF;IAEA,8DAA8D;IAC9D,MAAM,oBAAoB;QACxB,OAAO,IAAI,CAAC;IACd;IAEA,IAAI,SAAS;QACX,qBAAO,8OAAC;YAAE,WAAU;sBAAU;;;;;;IAChC;IAEA,IAAI,OAAO;QACT,qBAAO,8OAAC;YAAE,WAAU;sBAAS;;;;;;IAC/B;IAEA,IAAI,UAAU,MAAM,KAAK,GAAG;QAC1B,qBAAO,8OAAC;sBAAE;;;;;;IACZ;IAEA,qBACE,8OAAC;iDAAc;;0BACb,8OAAC;;0BAAG;;;;;;0BACJ,8OAAC;;;kCACC,8OAAC;;kCAAI,SAAS,CAAC,gBAAgB,EAAE;;;;;;oBAChC,SAAS,CAAC,gBAAgB,EAAE,QAAQ,IAAI,CAAC,QAAQ,sBAChD,8OAAC;4BAAmB,SAAS,IAAM,aAAa;;sCAC7C;2BADU;;;;;;;;;;;0BAKjB,8OAAC;;;oBAAE;oBAAU;;;;;;;0BAGb,8OAAC;gBAAO,SAAS;gBAAmB,OAAO,OAAO,MAAM;;0BAAE;;;;;;;;;;;;;;;;AAsFhE;AAEA,oBAAoB;AACpB,MAAM,SAAS;IACb,QAAQ;QACN,SAAS;QACT,iBAAiB;QACjB,OAAO;QACP,cAAc;QACd,QAAQ;QACR,UAAU;QACV,QAAQ;QACR,WAAW;IACb;AACF"}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}